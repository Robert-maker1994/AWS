				IAM: Users & Groups. 

IAM = Identity and access management, Global services
Root account created by default, shouldn't be used or shared.

IAM: Policies inheritance 

IAM Polices strucutre
Consists of  
Version: policy language versions, always include "2012-10-17"
ID: an identifier for the policy
Statement: one or more individual statements 
Statements consist of:
Sid: and an identifier for the statement 
Effect whether the statement allows or denies access
principal: Account /user/role to which this policy applied to 
Action: list of actions this policy allows or denies 
Resource: list of resources to which the action applied to 
Condition: condition fo when this policy is in effect

Multi Factor Authentication - MFA 
• Users have access to your account and can possibly change configurations or delete resources in your AWS account • You want to protect your Root Accounts and IAM users • MFA = password you know + security device you own • Main benefit of MFA: if a password is stolen or hacked, the account is not compromise

MFA device options in AWS: 
Vertual mfa device 
Universal 2nd factor u2f security key
Hardware key dob mfa device 
AWS govCloud

AM Roles for Services 
• Some AWS service will need to perform actions on your behalf 
• To do so, we will assign permissions to AWS services with IAM Roles 
• Common roles: • EC2 Instance Roles • Lambda Function Roles • Roles for CloudFormation

IAM Guidelines & Best Practices 
• Don’t use the root account except for AWS account setup • One physical user = One AWS user • Assign users to groups and assign permissions to groups • Create a strong password policy • Use and enforce the use of Multi-Factor Authentication (MFA) • Create and use Roles for giving permissions to AWS services • Use Access Keys for Programmatic Access (CLI / SDK) • Audit permissions of your account with the IAM Credentials Report • Never share IAM users & Access Key

Shared Responsibitlity model for IAM
Infrastructure (global network security) • Configuration and vulnerability analysis • Compliance validation
 You 
• Users, Groups, Roles, Policies management and monitoring • Enable MFA on all accounts • Rotate all your keys often • Use IAM tools to apply appropriate permissions • Analyze access patterns & review permissions 

 IAM Section – Summary 
Users: mapped to a physical user, has a password for AWS Console 
• Groups: contains users only
• Policies: JSON document that outlines permissions for users or groups 
• Roles: for EC2 instances or AWS services 
• Security: MFA + Password Policy 
• AWS CLI: manage your AWS services using the command-line 
• AWS SDK: manage your AWS services using a programming language 
• Access Keys: access AWS using the CLI or SDK 
• Audit: IAM Credential Reports & IAM Access Advisor

Q: Which of the following is an IAM Security Tool? A: IAM credentials Report

Q: What are IAM Policies? A:  JSON documents to define users groups or role permissions
